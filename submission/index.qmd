---
submission_id: 499
title: Learning to Read Digital? Constellations of Correspondence Project and Humanist Perspectives on the Aggregated 19th-century Finnish Letter Metadata
author:
  - name: Hanna-Leena Paloposki
    orcid: 0000
    email: hanna-leena.paloposki@finlit.fi
    affiliations:
      - the Finnish Literature Society, Helsinki, Finland
  - name: Ilona Pikkanen
    orcid: 0000-0001-9435-7163
    email: ilona.pikkanen@finlit.fi
    affiliations:
      - The Finnish Literature Society, Helsinki, Finland

keywords:
  - Keyword 1
  - Keyword 2
  - Keyword 3
  - Keyword 4 (optional)
  - Keyword 5 (optional)
abstract: |
  Short abstract of the submission. This is a placeholder for the abstract of the manuscript. It should be between 150 and 250 words. It must not contain any references or unexplained abbreviations.
key-points:
  - Key point 1 (1 sentence)
  - Key point 2 (1 sentence)
  - Key point 3 (1 sentence)
date: 03-17-2024
bibliography: references.bib
---

## Introduction

This is a placeholder for the extended abstract of the paper. It should be between 1500 and 2000 words (excluding references).

We will address digital literacy from two perspectives: first, from our own experiences as Humanists in a digital environment. What kinds of procedures are needed to ensure correct and traceable decisions in the data transformation pipeline and to detect the inevitable errors in the data and their origin in a systematic way?
Second, we will explore experiences of the first test group of the portal that will gain access to the data in early 2024. How did we construct a functioning, well-motivated usersâ€™ community? What kinds of guidelines and activities are needed to make our decisions in processing data and the UI still under construction understandable? The members of the test group will mostly be humanists with no experience in digital humanities projects and research related to them. How well does the available metadata respond to their research questions and do they nurture innovative new research? Humanists still often tend to use criteria of close reading for distant reading, a perspective that we should overcome in order to learn to read digital.


Check <https://quarto.org/docs/authoring/markdown-basics.html> for more information on how to use markdown, <https://quarto.org/docs/authoring/cross-references.html> for more information on how to use cross-references like this (See @fig-example and @fig-plots), and <https://quarto.org/docs/authoring/footnotes-and-citations.html> for more information on how to use citations like this one [@haber2011, p. 11].

::: {#fig-example}

![Figure caption text.](images/placeholder.png)

:::

## Section 1

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit.

## Quarto Usage

For advanced users, we recommend exploring features as **Code Blocks**: Use triple backticks (```) to create code blocks. Specify the language for syntax highlighting (e.g., ```python`). Quarto lets you run code and embed its output directly into your document. See <https://quarto.org/docs/computations/inline-code.html> for guidance.

```{python}
#| output: false
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Create some simple synthetic historical data
np.random.seed(0)
years = pd.date_range('1900-01-01', periods=120, freq='Y')
values = np.random.normal(loc=0, scale=1, size=120).cumsum()

data = pd.DataFrame({
    'Year': years.year,
    'Value': values
})

# Save the data to a CSV file
data.to_csv('data/sample_data.csv', index=False)
```

```{python}
#| label: fig-plots
# Plotting the data
plt.figure(figsize=(10, 6))
plt.plot(data['Year'], data['Value'], marker='o')
plt.title('Synthetic Historical Data')
plt.xlabel('Year')
plt.ylabel('Value')
plt.grid(True)
plt.show()
```
